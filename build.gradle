buildscript {
  repositories.mavenCentral()
  dependencies {
    classpath 'org.jastadd:jastaddgradle:1.11.0'
  }
}

repositories {
  mavenCentral()
}

defaultTasks 'jar'

group = 'org.extendj'
def fullVersion
if (hasProperty('newVersion')) {
  // A new version string should be saved.
  def props = new Properties()
  props['version'] = newVersion
  props.store(file('src/res/Version.properties').newWriter(), null)
  version = fullVersion = newVersion
} else {
  def proc = 'git describe'.execute(null, rootDir)
  if  (proc.waitFor() == 0) {
    fullVersion = proc.text.trim()
    // Trim to get latest tag:
    version  = (fullVersion =~ /-\d+\-g.+$/).replaceAll('')
  } else {
    logger.warn('No git tags found. Reading stored version string.')
    def props = new Properties()
    file('src/res/Version.properties').withInputStream { stream -> props.load(stream) }
    version = fullVersion = props['version']
  }
}
println "Building ExtendJ version ${fullVersion}"

subprojects {
  apply plugin: 'java'
  apply plugin: 'application'
  apply plugin: 'jastadd'
  apply plugin: 'maven'
  apply plugin: 'signing'

  mainClassName = 'org.extendj.JavaCompiler'

  sourceCompatibility = targetCompatibility = '1.6'

  // Copy version info from parent project.
  group = rootProject.group
  version = rootProject.version

  sourceSets {
    main.java {
      srcDir rootProject.file('src/backend-main')
      srcDir rootProject.file('src/frontend-main')
    }
    main.resources {
      srcDir 'src/gen-res' // JastAdd buildInfo directory.
    }
  }

  jar {
    archiveName = 'extendj.jar'
    manifest.attributes 'Main-Class': mainClassName
    destinationDir = projectDir
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  // We generate this empty Jar to satisfy sonatype.
  // We have our own generated documentation at https://extendj.org/doc2/
  task fakeJavadocJar(type: Jar) {
    classifier = 'javadoc'
  }

  artifacts {
    archives fakeJavadocJar, sourcesJar
  }

  processResources.dependsOn 'updateVersionString'

  task updateVersionString {
    outputs.upToDateWhen {
      def props = new Properties()
      def output = project.file('src/gen-res/Version.properties')
      if (output.isFile()) {
        output.withInputStream { stream -> props.load(stream) }
      }
      props['version'] == fullVersion
    }

    doLast {
      file('src/gen-res').mkdirs()
      def props = new Properties()
      props['version'] = fullVersion
      props.store(file('src/gen-res/Version.properties').newWriter(), null)
    }
  }

  signing {
    // Require keyId to sign:
    required { project.hasProperty('signing.keyId') }
    sign configurations.archives
  }

  // Only configure the artifact uploading if the OSSRH credentials are available.
  if (project.hasProperty('ossrhUsername')) {
    uploadArchives {
      repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        pom.project {
          name 'ExtendJ'
          packaging 'jar'
          description 'Extensible Java Compiler'
          url 'https://extendj.org'
          organization {
            name 'ExtendJ Committers'
            url 'https://extendj.org'
          }
          licenses {
            license {
              name 'Modified BSD License'
              url 'http://opensource.org/licenses/BSD-3-Clause'
              distribution 'repo'
            }
          }
          developers {
            developer {
              name 'Torbjörn Ekman'
            }
            developer {
              name 'Jesper Öqvist'
              email 'jesper.oqvist@cs.lth.se'
            }
          }
          scm {
            connection 'scm:git:https://bitbucket.org/extendj/extendj.git'
            url 'https://bitbucket.org/extendj/extendj'
          }
        }
      }
    }
  }
}

// Set the Gradle wrapper version:
task wrapper(type: Wrapper) {
  gradleVersion = '3.4.1'
}
