/* Copyright (c) 2005-2008, Torbjorn Ekman
 *               2011-2016, Jesper Ã–qvist <jesper.oqvist@cs.lth.se>
 *                    2014, Erik Hogeman <Erik.Hogemn@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Lund University nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
aspect Variable {
  public interface Variable {
    public String name();
    public TypeDecl type();
    public Collection<TypeDecl> throwTypes();
    public boolean isParameter();

    // 4.5.3
    public boolean isClassVariable();
    public boolean isInstanceVariable();
    public boolean isMethodParameter();
    public boolean isConstructorParameter();
    public boolean isExceptionHandlerParameter();
    public boolean isLocalVariable();
    public boolean isField();

    public boolean isPublic();

    // 4.5.4
    public boolean isFinal();
    public boolean isVolatile();

    // 4.12.4
    public boolean isEffectivelyFinal();

    public boolean isBlank();
    public boolean isStatic();
    public boolean isSynthetic();

    public boolean accessibleFrom(TypeDecl type);
    public TypeDecl hostType();

    public Expr getInit();
    public boolean hasInit();

    public boolean isConstant();
    public Constant constant();

    public Modifiers getModifiers();
  }
}
