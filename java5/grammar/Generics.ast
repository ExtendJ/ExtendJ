/** A generic class declaration. */
GenericClassDecl : ClassDecl ::= Modifiers <ID:String> [SuperClass:Access] Implements:Access*
    BodyDecl* TypeParameter:TypeVariable*;
GenericInterfaceDecl : InterfaceDecl ::= Modifiers <ID:String> SuperInterface:Access* BodyDecl*
    TypeParameter:TypeVariable*;

/** A specific parameterization of a generic class declaration. */
ParClassDecl : ClassDecl ::=
    TypeParameter:TypeVariable*
    <Parameterization:Parameterization>
    [SuperClass:Access] Implements:Access* BodyDecl*;

/**
 * The superclass and implemented interfaces in a raw type are also raw types.
 */
RawClassDecl : ParClassDecl;

ParInterfaceDecl : InterfaceDecl ::=
    TypeParameter:TypeVariable*
    <Parameterization:Parameterization>
    SuperInterface:Access* BodyDecl*;

/**
 * The superclass and implemented interfaces in a raw type are also raw types.
 */
RawInterfaceDecl : ParInterfaceDecl;

/** Parameterized type access. */
ParTypeAccess : Access ::= TypeAccess:Access TypeArgument:Access*;

TypeVariable : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;

abstract AbstractWildcard : Access;
Wildcard : AbstractWildcard;
WildcardExtends : AbstractWildcard ::= Access;
WildcardSuper : AbstractWildcard ::= Access;

abstract AbstractWildcardType : TypeDecl;
WildcardType : AbstractWildcardType;
WildcardExtendsType : AbstractWildcardType ::= Access;
WildcardSuperType : AbstractWildcardType ::= Access;

SubstitutedBodyDecl : BodyDecl ::= <Original:BodyDecl> <Parameterization:Parameterization>;

MethodDeclSubstituted : MethodDecl ::= <Original:MethodDecl>;
GenericMethodDeclSubstituted : GenericMethodDecl ::= <Original:GenericMethodDecl>;
GenericMethodDeclErased : GenericMethodDecl ::= <Original:GenericMethodDecl>;
ConstructorDeclSubstituted : ConstructorDecl ::= <Original:ConstructorDecl>;
GenericConstructorDeclSubstituted : GenericConstructorDecl ::= <Original:GenericConstructorDecl>;
GenericConstructorDeclErased : GenericConstructorDecl ::= <Original:GenericConstructorDecl>;
FieldDeclSubstituted : FieldDecl ::= <Original:FieldDecl>;
FieldDeclarationSubstituted : FieldDeclarator ::= <Original:FieldDeclarator>;

ClassDeclSubstituted : ClassDecl ::= <Original:TypeDecl>;
InterfaceDeclSubstituted : InterfaceDecl ::= <Original:TypeDecl>;
GenericClassDeclSubstituted : GenericClassDecl ::= <Original:TypeDecl>;
GenericInterfaceDeclSubstituted : GenericInterfaceDecl ::= <Original:TypeDecl>;

/**
 * Intersection type.
 * Occurs in, for example, conditional expression type analysis.
 */
LUBType : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;
GLBType : ReferenceType ::= Modifiers <ID:String> BodyDecl* TypeBound:Access*;

WildcardsCompilationUnit : CompilationUnit;

BridgeMethodDecl : MethodDecl;
